<?xml version="1.0"?>

<launch>

    <arg name="camera" default="camera" />

    <!-- start sensor-->
    <include file="$(find astra_camera)/launch/astra.launch">
    
        <!-- <arg name="camera" default="$(arg camera)"/> -->
    </include>


    <!-- <include file="$(find turn_on_wheeltec_robot)/launch/turn_on_wheeltec_robot.launch">
    </include> -->

    <!-- run pointcloud_to_laserscan node -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

        <!-- <remap from="cloud_in" to="$(arg camera)/depth_registered/points_processed"/> -->
        <remap from="cloud_in" to="/camera/depth/points"/>
        <remap from="scan" to="/scan_camera"/>
        <rosparam>
            target_frame: camera_link # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.01
            min_height: -0.27
            max_height: 0.12

            angle_min: -1.5708 # -M_PI/2
            angle_max: 1.5708 # M_PI/2
            <!-- angle_increment: 0.0087 # M_PI/360.0 -->
            angle_increment: 0.00384
            scan_time: 0.3333
            range_min: 0.1
            range_max: 4.0
            use_inf: true
            inf_epsilon: 1.0

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>

    </node>

	<!-- <node name="link_laser" pkg="tf2_ros" type="static_transform_publisher"  args="0 0 0.36 0 0 0 base_link laser" /> 
	<node name="link_camera" pkg="tf2_ros" type="static_transform_publisher"  args="0 0 0.27 0 0 0 base_link camera_link" />  -->

     <!--定义fusion函数 -->
	<node name="scan_fusion" pkg="pointcloud_to_laserscan" type="scan_fusion_node.py" output="screen" />

</launch>
